#设置cmake的最低版本
cmake_minimum_required(VERSION 3.16)

#设置解决方案名称
set(PROJECT_NAME "SingleHeaderDemo")
PROJECT( ${PROJECT_NAME} )

#设置解决方案的启动项
set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT ${PROJECT_NAME})

#设置CMAKE_INCLUDE_CURRENT_DIR
#CMAKE_INCLUDE_CURRENT_DIR设置后，自动添加CMAKE_CURRENT_BINARY_DIR和CMAKE_CURRENT_SOURCE_DIR到当前处理的CMakeLists.txt
#CMAKE_CURRENT_BINARY_DIR:如果是in-source编译，则跟CMAKE_CURRENT_SOURCE_DIR一致；如果是out-of-source，指的是target编译目录；
#CMAKE_CURRENT_SOURCE_DIR:指的是当前处理的CMakeLists.txt所在的路径；
set(CMAKE_INCLUDE_CURRENT_DIR ON)
message(STATUS "输出：  CMAKE_CURRENT_SOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR}")
message(STATUS "输出：  CMAKE_CURRENT_BINARY_DIR=${CMAKE_CURRENT_BINARY_DIR}")

#生成CMakePredefinedTargets文件夹包含ALL_BUILD和ZERO_CHECK
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

#CMAKE界面设置多线程编译选项
OPTION(WIN32_USE_MP "Set to ON to build with the /MP option (Visual Studio 2005 and above)." ON)
MARK_AS_ADVANCED(WIN32_USE_MP)
IF(WIN32_USE_MP)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
ENDIF(WIN32_USE_MP)

set(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "WAYA" FORCE)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

INCLUDE(cmake/MSVCVer.cmake)
#INCLUDE(cmake/Utils.cmake)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${CPU})
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${CPU})
SET(INCDIR ${PROJECT_SOURCE_DIR}/inc)

#add_definitions(-D_UNICODE -DUNICODE)
#add_definitions(-DPROJNAME=${PROJECT_NAME})

#增加插件
add_subdirectory(src)

